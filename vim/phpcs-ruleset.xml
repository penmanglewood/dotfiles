<?xml version="1.0"?>
<ruleset name="Rocket">
    <description>A coding standard based on an Zend coding standard and PSR-2.</description>
    <!-- http://pear.php.net/package/PHP_CodeSniffer/ -->

    <!-- 2012-10-16, bernhard.weisshuhn:
         disabled, since it enforces the opening brace of multiline
         function declarations to be on a new line.
         The rest of the functionality is handled by other rules already. -->
    <!-- <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/> -->
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>

    <!-- Parses and verifies the doc comments for functions. -->
    <!-- 2012-09-29, kai.schroeder:
         temporarily disabled because of this rule is violated massively -->
    <!-- <rule ref="Squiz.Commenting.FunctionComment"/> -->

    <!-- We allow variables to be used inside double quoted strings -->
    <rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
        <severity>0</severity>
    </rule>

    <!-- PSR-1 rules -->
    <!-- Method names MUST be declared in camelCase(). -->
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
    <!-- PHP code MUST use only UTF-8 without BOM. -->
    <rule ref="Generic.Files.ByteOrderMark"/>
    <!-- PHP code MUST use the long <?php ?> tags or the short-echo <?= ?> tags; it MUST NOT use the other tag variations. -->
    <rule ref="Generic.PHP.DisallowShortOpenTag.EchoFound"/>
    <!-- Class constants MUST be declared in all upper case with underscore separators. -->
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

<!-- PSR-2 rules -->

    <!-- All PHP files MUST use the Unix LF (linefeed) line ending. -->
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
        </properties>
    </rule>

    <!-- The closing ?> tag MUST be omitted from files containing only PHP. -->

    <rule ref="Zend.Files.ClosingTag">
        <exclude-pattern>*.phtml</exclude-pattern>
    </rule>

    <!-- The soft limit on line length MUST be 120 characters; automated style checkers MUST warn but MUST NOT error at the soft limit. -->

    <rule ref="Generic.Files.LineLength">
        <exclude-pattern>*.phtml</exclude-pattern>
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="0"/>
        </properties>
    </rule>

    <!-- There MUST NOT be trailing whitespace at the end of non-blank lines. -->

    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
    <severity>0</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
        <severity>0</severity>
    </rule>

    <!-- There MUST NOT be more than one statement per line. -->

    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>

    <!-- Code MUST use an indent of 4 spaces, and MUST NOT use tabs for indenting. -->

    <rule ref="Generic.WhiteSpace.ScopeIndent"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

    <!-- The PHP constants true, false, and null MUST be in lower case. -->

    <rule ref="Generic.PHP.LowerCaseConstant"/>

    <!-- Visibility MUST be declared on all methods. -->

    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>

    <!-- Method names MUST NOT be declared with a space after the method name. The opening brace MUST go on its own line, and the closing brace MUST go on the next line following the body. There MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis. -->

    <rule ref="Squiz.Functions.FunctionDeclaration"/>
    <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>

    <!-- In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma. -->

    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1"/>
        </properties>
    </rule>

    <!-- Method arguments with default values MUST go at the end of the argument list. -->

    <rule ref="PEAR.Functions.ValidDefaultValue"/>

    <!-- Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line. When the argument list is split across multiple lines, the closing parenthesis and opening brace MUST be placed together on their own line with one space between them. -->

    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>

    <!-- When making a method or function call, there MUST NOT be a space between the method or function name and the opening parenthesis, there MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis. In the argument list, there MUST NOT be a space before each comma, and there MUST be one space after each comma.
     Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line. -->

    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties>
            <property name="allowMultipleArguments" value="false"/>
        </properties>
    </rule>

    <!-- The general style rules for control structures are as follows:
    There MUST be one space after the control structure keyword
    There MUST NOT be a space after the opening parenthesis
    There MUST NOT be a space before the closing parenthesis
    There MUST be one space between the closing parenthesis and the opening brace
    The structure body MUST be indented once
    The closing brace MUST be on the next line after the body -->

    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>

    <!-- The body of each structure MUST be enclosed by braces. This standardizes how the structures look, and reduces the likelihood of introducing errors as new lines get added to the body. -->

    <rule ref="Generic.ControlStructures.InlineControlStructure"/>

    <!-- The keyword elseif SHOULD be used instead of else if so that all control keywords look like single words. -->

    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>

</ruleset>
